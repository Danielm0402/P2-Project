{
  "openapi": "3.0.0",
  "info": {
    "title": "iaq_mon_plat_api",
    "description": "The API for IAQ Monitoring Platform",
    "version": "1.0.0-oas3"
  },
  "servers": [
    {
      "url": "https://dat2c1-3.p2datsw.cs.aau.dk/node0/"
    }
  ],
  "paths": {
    "/getsensorinfo": {
      "get": {
        "tags": [ "UserLevel" ],
        "description": "Returns information regarding sensors, rooms and sensor types",
        "responses": {
          "200": {
            "description": "Rooms with sensors and their sensor types",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/getpredictiondata": {
      "get": {
        "tags": [ "UserLevel" ],
        "description": "Returns an array of future IAQ predictions",
        "parameters": [
          {
            "name": "room",
            "in": "query",
            "description": "the ID of the room that you want info on",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "The time where you want the prediction algorithm to run from, in string format \"2020-04-20T12:00:00\"\"",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Prediction data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/getwarningsandsolutions": {
      "get": {
        "tags": [ "UserLevel" ],
        "description": "Returns warnings based on the prediction algorithm",
        "parameters": [
          {
            "name": "room",
            "in": "query",
            "description": "the ID of the room that you want info on",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "The time where you want the prediction algorithm to run from, in string format \"2020-04-20T12:00:00\"\"",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Warnings and Solutions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/getlivedata": {
      "get": {
        "tags": [ "UserLevel" ],
        "description": "Returns live data a room, split into intervals",
        "parameters": [
          {
            "name": "roomID",
            "in": "query",
            "description": "the ID of the sensor that you want info on",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "The time where you want the prediction algorithm to run from, in string format \"2020-04-20T12:00:00\"\"",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Live data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_3"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/login": {
      "get": {
        "tags": [ "AdminLevel_GET" ],
        "description": "Checks if admin credentials are ok",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Correct credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_4"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/getallwarningsandsolutions": {
      "get": {
        "tags": [ "AdminLevel_GET" ],
        "description": "Returns all warnings and solutions from DB",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rooms with sensors and their sensor types",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_5"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/addnewwarning": {
      "put": {
        "tags": [ "AdminLevel_PUT" ],
        "description": "Adds a new warning to the DB",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sensorType",
            "in": "query",
            "description": "The index of the sensor type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "message",
            "in": "query",
            "description": "The message assosiated with the warning",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Warning added succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_6"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/removewarning": {
      "delete": {
        "tags": [ "AdminLevel_DELETE" ],
        "description": "Removes a warning from the DB",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "warningID",
            "in": "query",
            "description": "The ID of the warning to be removed",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Warning removed succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_7"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/updatewarning": {
      "patch": {
        "tags": [ "AdminLevel_PATCH" ],
        "description": "Updates a warning from the DB",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "warningID",
            "in": "query",
            "description": "The ID of the warning to be updated",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          },
          {
            "name": "message",
            "in": "query",
            "description": "The updated message of the warning",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Warning updated succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_8"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/addnewsolution": {
      "put": {
        "tags": [ "AdminLevel_PUT" ],
        "description": "Adds a new solution to the DB",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "warningID",
            "in": "query",
            "description": "The ID of the warning the new solution should be attached to",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          },
          {
            "name": "priority",
            "in": "query",
            "description": "The priority of the solution, numbers from 1-3 where 1 is low, 2 is medium and 3 is high",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 3,
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "name": "message",
            "in": "query",
            "description": "The message of the solution",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Solution added succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_9"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/removesolutionreference": {
      "patch": {
        "tags": [ "AdminLevel_PATCH" ],
        "description": "Detaches a solution from a warning",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "solutionID",
            "in": "query",
            "description": "The ID of the solution, whos attachment to a warning should be cut",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Solution reference removed succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_10"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/updatesolution": {
      "patch": {
        "tags": [ "AdminLevel_PATCH" ],
        "description": "Updates a solutions message and/or priority",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "solutionID",
            "in": "query",
            "description": "The ID of the target solution",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          },
          {
            "name": "message",
            "in": "query",
            "description": "The new message of the solution",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priority",
            "in": "query",
            "description": "New priority of the soluton, number from 1-3",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 3,
              "minimum": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Solution updated succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_11"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/addexistingsolution": {
      "patch": {
        "tags": [ "AdminLevel_PATCH" ],
        "description": "Attaches an existing solution to a warning",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "solutionID",
            "in": "query",
            "description": "The ID of the target solution",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          },
          {
            "name": "warningID",
            "in": "query",
            "description": "The new message of the solution",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Solution attached succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_12"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/removesolution": {
      "delete": {
        "tags": [ "AdminLevel_DELETE" ],
        "description": "Removes a solution from the DB",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "solutionID",
            "in": "query",
            "description": "The ID of the target solution",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Solution removed succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_13"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/getallsolutions": {
      "get": {
        "tags": [ "AdminLevel_GET" ],
        "description": "Gets all solutions in the DB",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All the solutions in the DB",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_14"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/addnewroom": {
      "put": {
        "tags": [ "AdminLevel_PUT" ],
        "description": "Adds a new room to the DB",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roomName",
            "in": "query",
            "description": "The name of the new room",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room added succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_15"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/removeroom": {
      "delete": {
        "tags": [ "AdminLevel_DELETE" ],
        "description": "Removes a room",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roomID",
            "in": "query",
            "description": "The index of the room to be removed",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room removed succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_16"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/getallsensortypes": {
      "get": {
        "tags": [ "AdminLevel_GET" ],
        "description": "Gets all the sensor types in the DB",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of all sensor types in the database",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_17"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/addnewsensortype": {
      "put": {
        "tags": [ "AdminLevel_PUT" ],
        "description": "Adds a new sensor type to the DB",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "typeName",
            "in": "query",
            "description": "The name of the new sensor type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sensor type added succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_18"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/addexistingsensortype": {
      "patch": {
        "tags": [ "AdminLevel_PATCH" ],
        "description": "Attaches an existing sensor type to a sensor",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sensorType",
            "in": "query",
            "description": "The ID of the sensor type to attach",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          },
          {
            "name": "sensorID",
            "in": "query",
            "description": "The ID of the sensor to attach the type to",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "threshold",
            "in": "query",
            "description": "The initial threshold value of the sensor type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sensor type attached succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_19"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/removesensortype": {
      "delete": {
        "tags": [ "AdminLevel_DELETE" ],
        "description": "Removed a sensor type from the DB",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sensorType",
            "in": "query",
            "description": "The ID of the sensor type to remove",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sensor type removed succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_20"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/removesensortypereference": {
      "patch": {
        "tags": [ "AdminLevel_PATCH" ],
        "description": "Detach a sensor type from a sensor",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sensorType",
            "in": "query",
            "description": "The ID of the sensor type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          },
          {
            "name": "sensorID",
            "in": "query",
            "description": "The ID of the sensor type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sensor type reference removed succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_21"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/updatesensortypethreshold": {
      "patch": {
        "tags": [ "AdminLevel_PATCH" ],
        "description": "Update a sensors sensor type threshold",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sensorType",
            "in": "query",
            "description": "The ID of the sensor type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          },
          {
            "name": "sensorID",
            "in": "query",
            "description": "The ID of the sensor type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          },
          {
            "name": "threshold",
            "in": "query",
            "description": "The new threshold for the sensor type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sensor type reference update succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_22"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/getallsensors": {
      "get": {
        "tags": [ "AdminLevel_GET" ],
        "description": "Gets all sensors in the DB",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of all the sensors in the DB",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_23"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/updatesensor": {
      "patch": {
        "tags": [ "AdminLevel_PATCH" ],
        "description": "Update a sensors target room",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sensorID",
            "in": "query",
            "description": "The ID of the sensor",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          },
          {
            "name": "roomID",
            "in": "query",
            "description": "The ID of the target room",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sensors target room ID updated!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_24"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/addnewsensor": {
      "put": {
        "tags": [ "AdminLevel_PUT" ],
        "description": "Adds a new sensor",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roomID",
            "in": "query",
            "description": "The ID of the target room",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The sensor have been added!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_25"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/removesensorreference": {
      "patch": {
        "tags": [ "AdminLevel_PATCH" ],
        "description": "Removes a sensors reference to a room",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sensorID",
            "in": "query",
            "description": "The ID of the target sensor",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The sensor reference have been removed!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_26"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/removesensor": {
      "delete": {
        "tags": [ "AdminLevel_DELETE" ],
        "description": "Removes a sensor entirely",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sensorID",
            "in": "query",
            "description": "The ID of the target sensor",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The sensor was succesfully removed!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_27"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/insertsensorvalue": {
      "put": {
        "tags": [ "AdminLevel_PUT" ],
        "description": "Inserts a new value from a sensor",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sensorID",
            "in": "query",
            "description": "The ID of the target sensor",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          },
          {
            "name": "sensorType",
            "in": "query",
            "description": "The ID of the target sensor type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          },
          {
            "name": "sensorValue",
            "in": "query",
            "description": "The messured value from the sensor",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The sensor value was added succesfully!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_28"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/getpriorityname": {
      "get": {
        "tags": [ "AdminLevel_GET" ],
        "description": "Inserts a new value from a sensor",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priorityID",
            "in": "query",
            "description": "The ID of the priority",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Name of the priority",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_29"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/getallthresholdvalues": {
      "get": {
        "tags": [ "AdminLevel_GET" ],
        "description": "Gets all threshold values from the DB",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of all threshold values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_30"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/api-doc": {
      "get": {
        "tags": [ "UserLevel" ],
        "description": "Gets this document",
        "responses": {
          "200": {
            "description": "Gets the openAPI document",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    },
    "/admin/getallpriorities": {
      "get": {
        "tags": [ "AdminLevel_GET" ],
        "description": "Gets all the priorities from the database",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of an admin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of all priorities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_31"
                }
              }
            }
          },
          "404": {
            "description": "Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "WrongParam": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Wrong, missing or wrong parameters!"
          },
          "returnCode": {
            "type": "number",
            "example": 401
          }
        }
      },
      "WrongCredentials": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Wrong credentials!"
          },
          "returnCode": {
            "type": "number",
            "example": 411
          }
        }
      },
      "UnknownServerError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "An error occured on the server!"
          },
          "returnCode": {
            "type": "number",
            "example": 499
          }
        }
      },
      "inline_response_200": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 223
          },
          "message": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_message"
            }
          }
        }
      },
      "inline_response_404": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/WrongParam"
          },
          {
            "$ref": "#/components/schemas/WrongCredentials"
          },
          {
            "$ref": "#/components/schemas/UnknownServerError"
          }
        ]
      },
      "inline_response_200_1": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 224
          },
          "message": {
            "$ref": "#/components/schemas/inline_response_200_1_message"
          }
        }
      },
      "inline_response_200_2": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 222
          },
          "message": {
            "$ref": "#/components/schemas/inline_response_200_2_message"
          }
        }
      },
      "inline_response_200_3": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 231
          },
          "message": {
            "$ref": "#/components/schemas/inline_response_200_3_message"
          }
        }
      },
      "inline_response_200_4": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 225
          },
          "message": {
            "type": "string",
            "example": "Credentials correct!"
          }
        }
      },
      "inline_response_200_5": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 234
          },
          "message": {
            "$ref": "#/components/schemas/inline_response_200_5_message"
          }
        }
      },
      "inline_response_200_6": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 201
          },
          "message": {
            "type": "string",
            "example": "Warning added succesfully!"
          }
        }
      },
      "inline_response_200_7": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 202
          },
          "message": {
            "type": "string",
            "example": "Warning removed succesfully!"
          }
        }
      },
      "inline_response_200_8": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 203
          },
          "message": {
            "type": "string",
            "example": "Warning updated succesfully!"
          }
        }
      },
      "inline_response_200_9": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 204
          },
          "message": {
            "type": "string",
            "example": "Solution added succesfully!"
          }
        }
      },
      "inline_response_200_10": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 208
          },
          "message": {
            "type": "string",
            "example": "Solution reference removed succesfully!"
          }
        }
      },
      "inline_response_200_11": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 206
          },
          "message": {
            "type": "string",
            "example": "Solution updated succesfully!"
          }
        }
      },
      "inline_response_200_12": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 207
          },
          "message": {
            "type": "string",
            "example": "Solution attached succesfully!"
          }
        }
      },
      "inline_response_200_13": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 205
          },
          "message": {
            "type": "string",
            "example": "Solution removed succesfully!"
          }
        }
      },
      "inline_response_200_14": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 228
          },
          "message": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_14_message"
            }
          }
        }
      },
      "inline_response_200_15": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 209
          },
          "message": {
            "type": "string",
            "example": "Room added succesfully!"
          }
        }
      },
      "inline_response_200_16": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 210
          },
          "message": {
            "type": "string",
            "example": "Room removed succesfully!"
          }
        }
      },
      "inline_response_200_17": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 227
          },
          "message": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_17_message"
            }
          }
        }
      },
      "inline_response_200_18": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 216
          },
          "message": {
            "type": "string",
            "example": "Sensor type added succesfully!"
          }
        }
      },
      "inline_response_200_19": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 217
          },
          "message": {
            "type": "string",
            "example": "Sensor type attached succesfully!"
          }
        }
      },
      "inline_response_200_20": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 218
          },
          "message": {
            "type": "string",
            "example": "Sensor type removed succesfully!"
          }
        }
      },
      "inline_response_200_21": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 219
          },
          "message": {
            "type": "string",
            "example": "Sensor type reference removed succesfully!"
          }
        }
      },
      "inline_response_200_22": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 220
          },
          "message": {
            "type": "string",
            "example": "Sensor type reference update succesfully!"
          }
        }
      },
      "inline_response_200_23": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 229
          },
          "message": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_23_message"
            }
          }
        }
      },
      "inline_response_200_24": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 230
          },
          "message": {
            "type": "string",
            "example": "Sensors target room ID updated!"
          }
        }
      },
      "inline_response_200_25": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 212
          },
          "message": {
            "type": "string",
            "example": "The sensor have been added!"
          }
        }
      },
      "inline_response_200_26": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 215
          },
          "message": {
            "type": "string",
            "example": "The sensor reference have been removed!"
          }
        }
      },
      "inline_response_200_27": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 213
          },
          "message": {
            "type": "string",
            "example": "The sensor was succesfully removed!"
          }
        }
      },
      "inline_response_200_28": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 221
          },
          "message": {
            "type": "string",
            "example": "The sensor value was added succesfully!"
          }
        }
      },
      "inline_response_200_29": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 233
          },
          "message": {
            "type": "string",
            "example": "Medium"
          }
        }
      },
      "inline_response_200_30": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 232
          },
          "message": {
            "$ref": "#/components/schemas/inline_response_200_30_message"
          }
        }
      },
      "inline_response_200_31": {
        "type": "object",
        "properties": {
          "returnCode": {
            "type": "number",
            "example": 235
          },
          "message": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_31_message"
            }
          }
        }
      },
      "inline_response_200_sensors": {
        "type": "object",
        "properties": {
          "sensorID": {
            "type": "number",
            "example": 1
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Temperature"
            }
          }
        }
      },
      "inline_response_200_message": {
        "type": "object",
        "properties": {
          "roomID": {
            "type": "number",
            "example": 0
          },
          "roomName": {
            "type": "string",
            "example": "Room A"
          },
          "sensors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_sensors"
            }
          }
        }
      },
      "inline_response_200_1_message_thresholdPasses": {
        "type": "object",
        "properties": {
          "timeUntil": {
            "type": "number",
            "example": 5
          },
          "timesExeeded": {
            "type": "number",
            "example": 0.4
          }
        }
      },
      "inline_response_200_1_message_data": {
        "type": "object",
        "properties": {
          "sensorType": {
            "type": "number",
            "example": 0
          },
          "name": {
            "type": "string",
            "example": "CO2"
          },
          "thresholdPasses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_1_message_thresholdPasses"
            }
          }
        }
      },
      "inline_response_200_1_message": {
        "type": "object",
        "properties": {
          "interval": {
            "type": "number",
            "example": 1
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_1_message_data"
            }
          }
        }
      },
      "inline_response_200_2_message_data_solutionInfo_solutionInfo": {
        "type": "object",
        "properties": {
          "priority": {
            "type": "number",
            "example": 3
          },
          "timeUntil": {
            "type": "number",
            "example": 4
          }
        }
      },
      "inline_response_200_2_message_data_solutionInfo": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Some solution for too high CO2"
          },
          "solutionInfo": {
            "$ref": "#/components/schemas/inline_response_200_2_message_data_solutionInfo_solutionInfo"
          }
        }
      },
      "inline_response_200_2_message_data": {
        "type": "object",
        "properties": {
          "warningID": {
            "type": "number",
            "example": 2
          },
          "sensorType": {
            "type": "number",
            "example": 1
          },
          "message": {
            "type": "string",
            "example": "Too high CO2 Level!"
          },
          "solutionInfo": {
            "$ref": "#/components/schemas/inline_response_200_2_message_data_solutionInfo"
          }
        }
      },
      "inline_response_200_2_message": {
        "type": "object",
        "properties": {
          "interval": {
            "type": "number",
            "example": 5
          },
          "data": {
            "$ref": "#/components/schemas/inline_response_200_2_message_data"
          }
        }
      },
      "inline_response_200_3_message_data_sensorLiveData": {
        "type": "object",
        "properties": {
          "timeStamp": {
            "type": "number",
            "example": 2
          },
          "sensorValue": {
            "type": "number",
            "example": 2
          }
        }
      },
      "inline_response_200_3_message_data_liveDataArray": {
        "type": "object",
        "properties": {
          "sensorID": {
            "type": "number",
            "example": 2
          },
          "sensorThreshold": {
            "type": "number",
            "example": 500
          },
          "sensorLiveData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_3_message_data_sensorLiveData"
            }
          }
        }
      },
      "inline_response_200_3_message_data": {
        "type": "object",
        "properties": {
          "sensorType": {
            "type": "string",
            "example": "CO2"
          },
          "liveDataArray": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_3_message_data_liveDataArray"
            }
          }
        }
      },
      "inline_response_200_3_message": {
        "type": "object",
        "properties": {
          "interval": {
            "type": "number",
            "example": 5
          },
          "data": {
            "$ref": "#/components/schemas/inline_response_200_3_message_data"
          }
        }
      },
      "inline_response_200_5_message_solutions": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Medium priority solution"
          },
          "solutionID": {
            "type": "number",
            "example": 1
          },
          "warningPriority": {
            "type": "number",
            "example": 1
          }
        }
      },
      "inline_response_200_5_message_data": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Default warning"
          },
          "sensorType": {
            "type": "number",
            "example": 2
          },
          "warningID": {
            "type": "number",
            "example": -1
          },
          "solutions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_5_message_solutions"
            }
          }
        }
      },
      "inline_response_200_5_message": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_5_message_data"
            }
          }
        }
      },
      "inline_response_200_14_message": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Default solution"
          },
          "solutionID": {
            "minimum": 0,
            "type": "number",
            "example": 0
          },
          "warningID": {
            "minimum": 0,
            "type": "number",
            "example": 0
          },
          "warningPriority": {
            "maximum": 3,
            "minimum": 1,
            "type": "number",
            "example": 2
          }
        }
      },
      "inline_response_200_17_message": {
        "type": "object",
        "properties": {
          "sensorType": {
            "minimum": 0,
            "type": "number",
            "example": 0
          },
          "typeName": {
            "type": "string"
          }
        }
      },
      "inline_response_200_23_message": {
        "type": "object",
        "properties": {
          "sensorID": {
            "type": "number",
            "example": 0
          },
          "roomID": {
            "minimum": 0,
            "type": "number",
            "example": 0
          }
        }
      },
      "inline_response_200_30_message_data": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 2
          },
          "sensorID": {
            "type": "number",
            "example": 3
          },
          "sensorType": {
            "type": "number",
            "example": 2
          },
          "thresholdValue": {
            "type": "number",
            "example": 400
          }
        }
      },
      "inline_response_200_30_message": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_30_message_data"
            }
          }
        }
      },
      "inline_response_200_31_message": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 0
          },
          "name": {
            "type": "string",
            "example": "None"
          },
          "time": {
            "type": "number",
            "example": 999
          }
        }
      }
    },
    "responses": {
      "404": {
        "description": "Errors",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/inline_response_404"
            }
          }
        }
      }
    },
    "parameters": {
      "adminUsername": {
        "name": "username",
        "in": "query",
        "description": "The username of an admin",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "adminPassword": {
        "name": "password",
        "in": "query",
        "description": "The password of an admin",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      }
    }
  }
}